
Умный на лестнице разглагольствует о MTU в OSPFv2

Умный на лестнице [1] - это выражение, которое иногда встречается в художественной
литературе. Оно используется в отношении человека, который нашел удачный ответ
уже после того как диалог был закончен, то есть буквально оказавшись за порогом
на лестнице. Имеет саркастическую интонацию. Может употребляться в отношении самого себя.

--

Мне пришлось звонить рекрутеру, чтобы напомнить о себе. По другую сторону экрана на меня
смотрело пустое кресло на фоне унылой перегородки. Когда интервьюер наконец 
появился, я увидел уставшего человека, не имевшего никакого 
желания общаться. Это была крупная контора - что ж, другого отношения я и не ждал. 
Эта контора ряд последних лет занималась национализацией интернета. Она скупала 
локальных tier 3 провайдеров, и переводила их сервисы на свое ядро. Работы было много, 
приходилось иметь дело с разными сетями, об устройстве которых 
не было понятия - сотрудники этих мелких провайдеров как правило увольнялись 
после поглощения. 
Я, конечно, ничего этого на тот момент не знал. Я был как подросток возраста полового 
созревания, который тыкался своим стручком в любую дырку. И теперь передо мной был 
недовольный инженер, который решил поскорей разобраться со мной и вернуться к своим делам.
Он задал вопрос почему соседство OSPF зависает на стадии Ext/Exchange. Я не смог 
ответить и собеседование закончилось. Перед тем как выдворить меня за дверь,
он снисходительно подсказал, что дело в MTU, но тогда это слово было
для меня из области запуска космических кораблей - неким параметром,
обращение с которым требует глубоких вычислений и недюженный умственных способностей. 
Иными словами, я на минуту оказался в одном модуле с астронавтом, но тут же был из него выброшен.
Волей судьбы мне удалось устроиться в эту же контору в другом городе, 
и по сути начать заниматься тем же самым - переводом сервисов. Тогда-то я понял 
откуда взялся этот вопрос про MTU в OSPF... 

Мы редко задаем вопросы. Вопросы требуют ответов. Вопрос возлагает на нас ответственность,
или, и того хуже, рождает другие вопросы. И стоит вопросу в нас проникнуть, как мы
сидим сгорбившись среди ночи за экраном, или книгой, вместо того, чтобы обнимать теплую
жену в нежной постели. 
Инженерно-технические решения* создаются для того, чтобы вопросов
не задавали - просто следуй инструкции и уходи с работы вовремя. К сожалению, даже если
такой документ составлен скрупулезно, исполнитель не спешит его читать, предпочитая 
краткий инструктаж от старшего коллеги. К чему сводятся все эти решения и инструкции? 
Как правило, они содержат только типовые конфигурации,
порядок действий, который необходимо выполнить, причем безо всяких объяснений что и зачем
выполняется. Даже официальные руководства крупных производителей сетевого оборудования грешат этим -
что же говорить о провайдерах с их внутренними документами... Только редкие энтузиасты создают
действительно детальные руководства, гении, увлеченные делом. Попробуй найди такого...

ИТР, с которыми мне приходилось работать, не имели упоминаний про MTU в OSPF.
На используемых железках проверка 
MTU была включена по умолчанию, поэтому типовые конфигурации не имели ни строки
кода про MTU. Большинство арий, с которыми нам приходилось работать были тупиковыми: 
со стороны ABR отдавался маршрут по умолчанию, со стороны тупикового роутера ** 
только несколько клиентских
подсетей. Самое маленькое сконфигурированное MTU, которое мне встречалось было не
меньше 1200 байт. Для LSA в тупиковой арии это огромный размер, все равно что Гибралтар для 
маленькой лодочки.  Иными словами, настраивать тупиковые роутеры с проверкой MTU это все равно что 
прописать в договор условия, о котором придется долго спорить, но которое никогда не произойдет.
Траблшутинг OSPF по причине MTU mismatch - пустая трата времени. Но для него были исторические
предпосылки, точнее проблема, которая оно решало. 

Из книги господина John T.Moy "OSPF: Анатомия интернет протокола маршрутизации" на странице 60
можно прочитать [2], что когда разрабатывался OSPF, Интернет тоже находился в стадии формирования 
и в нем использовалось множество развивающихся технологий канального уровня. 
Все они имели свои особенности: разнились скорости передачи, частота ошибок, MTU.
Несмотря на то, что OSPF изначально разрабатывался для ARPANET [2] 
(размер MTU- 1006 байт [3]), с течением времени OSPF начал притязать стать стандартом. Для этой
цели ему требовалось стать совместимым со всеми этими технологиями и работать одинаково хорошо 
поверх них всех, или по-крайней мере, свести к минимуму влияние разных спецификаций на работоспособность
протокола. 
Действительно, в RFC1583 (1994г) есть только одно упоминание об MTU [4]. 
Его суть сводится к тому, что OSPF не способен самостоятельно фрагментировать пакеты,
и полагается в этом на IP протокол. Рекомендуется по возможности избегать фрагментации.
Это все. Изучать историю развития интернета по RFC то еще удовольствие...
К счастью, в 1998 году вышла в свет уже упомянутая книга автора того же RFC1583 John T.Moy. 
Из нее ясно [2], что в то время только несколько технологий канального уровня работали 
под управлением IP:
Ethernet и point-to-point serial lines (MTU 1500 байт); 
PPP и FDDI (4352), которые только-только разрабатывались; 802.5 Token Ring (4464) и 
Frame Relay, имевшие нечетко  определенный IP MTU. Поверх этих линков была вероятность, что 
пиры будут иметь несогласованность в отношении максимального размера пакета, 
который они могут отправить через линк, что вызовет 
проблемы при пересылке: как только один роутер отправит пакет 
большего размера, чем другой может принять, то этот пакет будет отброшен принимающей стороной.
IP фрагментация тут может прийти на помощь. Но чтобы фрагментация случилась, 
все роутеры должны предварительно согласовать MTU. OSPF, для этой цели был доработан, 
Доработку внесли в Database Description [5] - два байта сразу после
заголовка (Interface MTU). 

Мне пришлось собрал лабу из пары L3 коммутаторов ***, чтобы проверить это. Установил MTU в 160 байт на 
интерфейсе тупикового роутера, а на стороне ABR оставил без изменений 1500. 
Включил дебаг. Cтатус был Full, соседство установилось сразу без единого замечания. 
Проверил то самое Interface MTU в 
Database Description, а оно равно 0. Оказалось вендор отключил по умолчанию 
проверку MTU на всех своих продуктах, объяснив это тем, что не хочет создавать проблем [6]. 

Далее на ABR я отключил аннонс суммарных LSA, оставив только маршрут по умолчанию. Тип сети выбрал p2p 
на основе unnambered loopback интерфейса. В итоге, от ABR я получил один Router LSA 
с его loopback адресом и только один Summary LSA c маршрутом по умолчанию.
А со стороны тупикового роутера - один Router LSA с его loopback'ом.

Теперь нужно было на ABR сформировать такой LSA, размер пакета которого превысил был 160 байт,
и направить его по прямому линку в сторону тупикового роутера.
Для этой цели я мог выбрать только Router LSA. Во-первых, потому что у меня было p2p соединение, и
тупиковая ария с отлюченными саммари, так что других LSA у меня и быть не могло. Во-вторых,
если бы даже я вернул саммари, то они бы мне не подошли, потому что каждый новый аннонс сети,
формировал бы один LSA, в котором был бы только одна добавленная сетка, без всех
аннонсированных ранее, размер сообщения всегда был бы один и тот же 28 байт. 
ДРугое дело Router LSA - при добавлении новой сети оно вырастало на 12 байт, включает и старые
сети и новую. Иными, словами, одно LSA update может содержать в себе несколько разных
типов LSA, но  LSA-3 может содержать аннонс только одной сети, его размер
всегда один и тот же, то время как LSA-1 может содержать в себе целую кучу (а точнее 0x0000)
сетей (numbers of link). Да, конечно, можно и в одни LSA update запихать сколько угодно (а точнее
0x00000000) LSA (Number of LSAs), но для этого придется создать и закомить сразу множество
ospf активных интерфейсов с подсетями. Короче, наращивать размер LSA Update
было решено через LSA type 1 Router.
Далее нужно было понять сколько сетей добавить на ABR роутер, чтобы получить пакет размером 
больше 160 байт. 
20 байт - IP заголовок, 24 байта - OSPF заголовок, 4 байта - под количество LSA (Number of LSAs), 
36 байта - LSA-1, из которых 12 байт отводится под описание линка (или того, что я тут называю сетью).
Итого, базовый размер LSA пакета c аннонсом одной сети равен 84 байта. Размер этого фрейма 98 байт 
(к 84 прибавляем 14 байт размер EThernet заголовка). Итого, нужно было добавить 7 сетей, чтобы получить
пакет LSA Update размером 168 байт. 
Добавил. Закомитил. И произошло непредвиденное. Стаб роутер получил
LSA-1 размером 108 байт (24 байта + 7*12). Или датаграмму размером 168 байт:
20 байт - IP заголовок, 
24 байта - OSPF заголовок, 
4 байта - под количество LSA (Number of LSAs), 
24 байта - заголовок LSA-1
96 байт - 8 сетей
Пакет 168 байт пролетела через MTU 160 байт интерфейса тупикового роутера и был добавлена в lsdb. 
Не было отбрасывания пакета.
Я перепроверил на другом продукте, другой прошивки. То же самое. Ошибки быть не могло.
Проверил с помощью ICMP. Отправил с ABR пакет размером 133 байт без фрагментации. 
То есть с превышением на 1 байт (этот вендор добавлят +20 IP и +8 ICMP за сценой), итоговый размер
получался 161 байт. Пакет прекрасно долетел и пришел ответ. Я явно что-то упускал.
А упускал я 30 лет развития технологий...

Ethernet давно был улучшен, концепция jumbo фрэймов давно реализована. Изучив
способности обоих интерфейсов, я обнаружил прямо следом за параметром MTU и другой параметр - 
Maximum Frame Length. Он был равен 9216 байт. Поддержка jumbo фрэймов была включена по умолчанию.
Я мог отключить эту поддержку только одним способом - выставить минимательное допустимое 
значение фрейма в 1518 байт.
Размер фрейма меньше или равный 1518 байтам не является jumbo фрэймом [7].
Но я не мог выставить Maximum Frame Length равным 173 байтам, как мне нужно было для теста.
Я не мог выставить значение меньше чем 1518 для фрейма, который интерфейс мог принять.
Згначит нужно было наращивать размер LSA со стороны ABR.  Для этого требовалось 120 сетей, 
чтобы сформировать фрейм размером 1526 байт.
На самом деле я остановился на 119 сетей, чтобы подойти к крайней границе и убедиться, что такой фрейм
размером 1514 пройдет успешно. Так и было. Тупиковый роутер его принял и обновил lsdb.
Но следующий фрейм с аннонсом 120 сетей он не принял. Фрейм был отброшен. Счеткик ошибок
на интерфейсе тупиковог роутера начал расти: Giants +1.
Отсюда второй тезис: MTU ничего не значит для входящих пакетов. Роутер, принимая пакет, 
не чекает его MTU, он не сравнивает его MTU со своим MTU, ему важен размер фрейма, а не пакета.
Он принимает фрейм, а не пакет. И поэтому для него важен параметр Maximum Frame Length, который
в наше время имеет самые большие размеры.

Что же с MTU тогда?
На самом деле ABR не смог бы отправить один фрейм размером 1526 байтов со 120 сетями, 
потому что размер этого пакета был бы 1512, а это на 12 байт больше чем сконфигурированное на нем MTU. 
ABR отправил два, использовав IP фрагментацию. Он посмотрел на размер пакета, сранивнил
его с MTU своего исходящем интерфейсе, понял, что оно меньше, чем размер пакета и сфрагментировава пакет, 
отправил двумя частями. И тупиковый роутер его принял, потому что оба эти пакета в 1500 (фрейм 1514) 
и 84 байта (фрейм 98) прекрасно лезли через Maximum Frame Length в 1518 байт стаб роутера.
Да, мне пришлось поднять MTU на исходящем интерфейсе ABR, чтобы избежать фрагментации, и отправить
действительно большой фрейм в 1526 байт. Тогда то счетчик сетей (link counts) и застал на 119 в lsdb 
тупикового роутера, а счеткик ошибок начал расти: Giants +1. ABR все продолжал и продолжал и слать,
а счетчик все рос



Зачем же тогда согласовывать MTU в OSPF, если и так все ется?
В моем тесте пакет был отброшен и Giants +1 ошибка была сгенерирована. ABR продолжал сделать
LSA такого же размера и счетчик ошибок продолжал расти. Если бы MTU было согласнова, то такого
сценария не произошло бы. Как мы видели, роутер по умолчанию проверяет свое MTU перед отправкой,
и если оно меньше, чем пакет, то IP его фрагментирует. Если бы ABR знал MTU тупикового роутера, то
он выполнил бы фрагментацию тоже! В этом суть. С одной оговоркой, что знал бы он как бы уже не 
MTU, a Maximum Frame Length.
Идея Maximum Frame Length и MTU немного сводит с ума. В доке четко написано, что на входящем
интерфейсе, когда поступает пакет его MTU не проверяется, а проверяется размер фрейма и лезет ли он 
в Maximum Frame Length этого интерфейса. Об MTU роутер заботится во время отправки пакета, а не во
время приема.

Я не берусь делать каких-либо еще выводов, ибо, во-первых, уже достаточно наразглагольствовал,
а во-вторых, у уважаемого читателя наверняка найдется книга в твердом переплете,
которая лучше чем я расскажет обо всех эти относительно новых улучшениях в Ethernet технологии.
Моя задача состояла в том, чтобы поделиться личными опытом, а также материалами из 
авторитетных источников. Под конец я осмелюсь лишь 
выдвинуть несколько тезисов, подводя черту под этим затянувшимся опусом:
1. Проверка MTU может быть выключена по умолчанию. Это опция, а не требование.

Ясно, что опус вроде этой нельзя считать исчерпывающей. Вы, несомненно,
добавите большое количество рекомендаций в свой личный перечень, также включив в него
полезные инструкции от других инженеров.




1. стр. 60. OSPF_Anatomy_of_an_Internet_Routing_Protocol. John T.Moy
2, стр. 72. OSPF_Anatomy_of_an_Internet_Routing_Protocol. John T.Moy
3. стр. 3. Fragmentation Considered Harmful Christopher A. Kent, Jeffrey C. Mogul
http://ccr.sigcomm.org/archive/1995/jan95/ccr-9501-mogulf1.pdf
4. A.1 Encapsulation of OSPF packets https://datatracker.ietf.org/doc/html/rfc1583
5. 10.8.  Sending Database Description Packets https://datatracker.ietf.org/doc/html/rfc2328#ref-Ref22
6. https://support.huawei.com/hedex/hdx.do?docid=EDOC1100345000&id=EN-US_CLIREF_0000001907603308



https://support.huawei.com/hedex/hdx.do?docid=EDOC1100345000&id=EN-US_CLIREF_0000001907600404


46 байт


 







Я скрупулезно привожу размеры здесь не для того, 
показаться умным, а для того, чтобы показать, насколько увеличивается LSA после добавления новой сетки,
и сколько потребуется добавить сеток, чтобы превысить скромный размер MTU в 160 байт.




Какую же информацию должен нести LSA, что


LSA - update
14 - ethernet
20 - IP
24 - OSPF header
4 - количество сетей

+62

36 - роутер lsa c одной сеткой
=98 байт

24 - без сетки

+12 к кажой сетке

1446 - 113 сетей


ip фрейм LSA 0 сетей = 86

119 сетей = 1428 + 86 - 1514




120 сетей - 1526 - превышение

1518



Maximum Frame Length is 1518
Giants


1452   



